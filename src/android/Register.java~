package com.google.android.gcm.finder.app;


import android.os.StrictMode;
import android.content.Context;
import android.util.Log;
import android.widget.Toast;
import android.content.Intent;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.gcm.GoogleCloudMessaging;

//import android.app.Activity;
//import android.content.Context;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.AsyncTask;
import android.os.Bundle;
//import android.util.Log;
import android.view.View;
import android.os.StrictMode;

//import android.widget.TextView;

import java.io.IOException;
import java.util.concurrent.atomic.AtomicInteger;
import java.lang.*;
import java.net.URLConnection;
import java.io.OutputStreamWriter;

public class Register extends AsyncTask<Void, Void, String> {
	    GoogleCloudMessaging gcm;
	    String regid;
	    Context context;
	    String SENDER_ID = "334853667888";
	    static final String TAG = "GCM Finder";

	    public static final String EXTRA_MESSAGE = "message";
    	public static final String PROPERTY_REG_ID = "registration_id";
    	private static final String PROPERTY_APP_VERSION = "appVersion";
    	private static final int PLAY_SERVICES_RESOLUTION_REQUEST = 9000;

	@Override
	protected String doInBackground(Void... params) {
                // if (android.os.Build.VERSION.SDK_INT > 9) {  
                //     StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();  
                //     StrictMode.setThreadPolicy(policy);  
                // }
                Log.d(TAG,"Running AsyncTask");
                //String msg = "return messages";
                String msg = "";
                try {
                //     if (android.os.Build.VERSION.SDK_INT > 9) {  
                //      StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();  
                //      StrictMode.setThreadPolicy(policy);  
                // }
                    if (gcm == null) {
                        gcm = GoogleCloudMessaging.getInstance(context);
                    }
                    regid = gcm.register(SENDER_ID);
                    msg = "Device registered, registration ID=" + regid;
                    Log.d(TAG, "Registration Id : " + regid);
                    //sendRegistrationIdToBackend();
                    storeRegistrationId(context, regid);
                } catch (IOException ex) {
                    msg = "Error :" + ex.getMessage();
                    Log.d(TAG, "registerInBackground catch : " + msg);
                    // If there is an error, don't just keep trying to register.
                    // Require the user to click a button again, or perform
                    // exponential back-off.
                }
                 return msg;
            }



    private void storeRegistrationId(Context context, String regId) {
        final SharedPreferences prefs = context.getSharedPreferences("FinderPrefs", context.MODE_PRIVATE);
        int appVersion = getAppVersion(context);
        Log.d(TAG, "Saving regId on app version " + appVersion);
        SharedPreferences.Editor editor = prefs.edit();
        editor.putString(PROPERTY_REG_ID, regId);
        editor.putInt(PROPERTY_APP_VERSION, appVersion);
        editor.commit();
    }

    private static int getAppVersion(Context context) {
        try {
            PackageInfo packageInfo = context.getPackageManager()
                    .getPackageInfo(context.getPackageName(), 0);
            return packageInfo.versionCode;
        } catch (NameNotFoundException e) {
            // should never happen
            throw new RuntimeException("Could not get package name: " + e);
        }
    }


}
